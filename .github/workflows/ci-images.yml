name: Build CI/CD images

on:
  workflow_dispatch:
  push:
    paths:
      - '.infra/images/*'

env:
  IMAGE_NAME: chelyshkin/netsurf-ci

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find modified files in the latest commit
        id: find-files
        run: |
          echo "Listing changes in the latest commit..."
          files=$(git show --name-only --pretty=format: | grep '^.infra/images/' || echo "")
          echo "Modified files: $files"
          echo "::set-output name=modified_files::$files"

      - name: Create matrix
        id: set-matrix
        run: |
          files="${{ steps.find-files.outputs.modified_files }}"
          matrix="["
          for file in $files; do
            if [ -n "$file" ]; then
              filename=$(basename "$file" | sed 's/\./-/g')
              arch="$(echo $file | grep -oE '(amd64|arm64)' || echo 'amd64')"
              matrix="$matrix{\"dockerfile\":\"$file\", \"tag\":\"$filename\", \"arch\":\"$arch\"},"
            fi
          done
          matrix="${matrix%,}]"
          echo "::set-output name=matrix::$matrix"
          matrix="${matrix%,}]"
          echo "Generated matrix: $matrix"
          echo "::set-output name=matrix::$matrix"

  build-and-push:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Extract Go version from go.mod
        run: |
          echo "GO_VERSION=$(sed -n -e 's/^go //p' go.mod)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ fromJson(needs.prepare-matrix.outputs.matrix).length > 0 }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ matrix.tag }}
          platforms: linux/${{ matrix.arch }}
          build-args: GO_VERSION=${{ env.GO_VERSION }}
          target: builder-${{ matrix.arch }}
